/*! HTML5 Boilerplate v7.3.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.0.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

  .content-wrapper {  /*to apply to all content-wrappers*/
    width: 80%;
    margin: 50px 0; /*How did they pick this???*/
  }

/* -------------------- Base Header - Footer Styles -------------------- */
/*These header and footer styles are the same for all pages and includes nav*/

header,
footer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;  /*Anywhere you want content to wrap*/
}

/*Header Styles*/

header {
  padding: 15px 0;
}

header .content-wrapper {  /*Why do we need to specify flexbox for the rest of these if header and footer are already set to it?*/
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}

.header.divider {
  width: 100%;
  height: 1px;  /*How get this and what does it do?*/
  margin: 10px 0 20px 0; /*How get this and what does it do?*/
}

header nav {
  width:  60%;  /*Space the nav takes up*/
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-flow: row wrap;
}

header nav ul {
  width: 100%;
  display: flex;
  justify-content: space-around;
}

footer {
  flex-direction: column; /*How know to add this in????*/
}

footer p {
  margin: 0;  /*Why?*/
}

footer .content-wrapper {  
  width: 55%;
  margin: 50px 0;/*Why do we need to put this again if we assigned it to all content-wrappers?*/
}

footer .social {  /*They have something differnt here for contact*/
  padding: 45px 0;
}

/*They have this instead of footer .social*/
/*
footer. contact {
  margin-bottom 50px;
*/

footer .social-icons {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

footer .social-icons p {
  display: flex;
  justify-content: center;
  align-items: center;
}

footer .copyright {
  margin: 20px 0;
}



/* -------------------- Mobile Styles - Homepage -------------------- */
/*CSS specific to mobile first design*/

/*My biggest question right now is how to know which sections to assign flexbox to - there is no pattern when compared to last project*/

/*Hero Area*/

.hero-area {
  display: flex;
  justify-content: space-around;
  flex-flow: row wrap;
}
/*They don't use this*/
.content-wrapper h1 {  /*My attempt at accomplishing padding the text but not the image*/
  padding: 50px 0;
}

/*Aside*/
aside {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}

/*They don't use this*/
aside .content-wrapper {
  padding: 25px 0 45px 0;  /*The top padding is smaller than the bottom padding*/
}

/*Features*/
.features {
  display: flex;
  justify-content: center;
  flex-flow: row wrap;
}

.features h2 {
  margin-bottom: 60px;
}

.features article {
  width:  63%; 
  margin:  30px 0;  
}

.features .feature-items {
  /*width: 55%;*/  /*If you put this here, the feature articles are not centered*/
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
  text-align: center;
}

/*This removes space between p icon and p text*/
.features p {
  margin: 0;
}

/*Solution does not have these
.fontawesome-icon {
  padding: 25px 0;
}

.features-item-description {
  padding 35px 0;
  }*/

/*Reviews*/
.reviews {
  display: flex;
  justify-content: center;
  flex-flow: row wrap;  /*Why no align-items center?*/
}

/*I tried to addng space around sections with content-wrapper.  They used headings*/ 
/*.reviews .content-wrapper {
  padding: 40px 0;
}*/

.reviews h2 {
  margin-bottom: 40px 0;
}

.reviews h3 {
  width: 50%;
  margin: 20px 0; /*Space between pic above and text below*/
}


/* -------------------- Mobile Styles - About -------------------- */
/*CSS specific to mobile first design*/

/*Mission*/
.mission {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}

/*Contact*/
.contact-section {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}

.contact-section p {
  margin: 0;
}


/* -------------------- Mobile Styles - FAQ -------------------- */
/*CSS specific to mobile first design*/

/*FAQ*/
.faq {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}

.faq .content-wrapper { /*Why is content-wrapper included here but not in other similar style sections?????*/
 margin: 50px 0 0 0; /*Why does this section have a margin but others like it on other pages do not?*/
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}

.faq h2 {
  margin-bottom:  40px;  /*Don't know how they knew to do this*/
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
  display: none !important;
}

/*
* Hide only visually, but have it available for screen readers:
* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*
* 1. For long content, line feeds are not interpreted as spaces and small width
*    causes content to wrap 1 word per line:
*    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
*/

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
* Extends the .sr-only class to allow the element
* to be focusable when navigated to via the keyboard:
* https://www.drupal.org/node/897638
*/

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
* Hide visually and from screen readers, but maintain layout
*/

.invisible {
  visibility: hidden;
}

/*
* Clearfix: contain floats
*
* For modern browsers
* 1. The space content is one way to avoid an Opera bug when the
*    `contenteditable` attribute is included anywhere else in the document.
*    Otherwise it causes space to appear at the top and bottom of elements
*    that receive the `clearfix` class.
* 2. The use of `table` rather than `block` is only necessary if using
*    `:before` to contain the top-margins of child elements.
*/

.clearfix:before,
.clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */
}

.clearfix:after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
  (-webkit-min-device-pixel-ratio: 1.25),
  (min-resolution: 1.25dppx),
  (min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
  pre {
    white-space: pre-wrap !important;
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  /*
     * Printing Tables:
     * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}

